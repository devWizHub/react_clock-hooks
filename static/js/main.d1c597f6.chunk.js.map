{"version":3,"sources":["Components/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","clockName","useState","Date","toUTCString","slice","time","setTime","useEffect","timerId","window","setInterval","console","info","clearInterval","className","App","setClockName","hasClock","setHasClock","hideClock","event","preventDefault","showClock","clockNameTimerId","value","now","toString","getRandomName","document","addEventListener","removeEventListener","ReactDOM","render","getElementById"],"mappings":"oLAOO,SAASA,EAAT,GAA2C,IAA1BC,EAAyB,EAAzBA,UACtB,EAAwBC,oBAAS,IAAIC,MAClCC,cAAcC,OAAO,IAAK,IAD7B,mBAAOC,EAAP,KAAaC,EAAb,KAiBA,OAdAC,qBAAU,WACR,IAAMC,EAAUC,OAAOC,aAAY,WACjCJ,GAAQ,IAAIJ,MACTC,cAAcC,OAAO,IAAK,IAC7BO,QAAQC,KAAKP,KACZ,KAEH,OAAO,WACDG,GACFC,OAAOI,cAAcL,MAGxB,IAGD,sBAAKM,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGd,IAGF,YAED,sBAAMc,UAAU,cAAhB,SACGT,OCxBF,IAAMU,EAAgB,WAC3B,MAAkCd,mBAAS,WAA3C,mBAAOD,EAAP,KAAkBgB,EAAlB,KACA,EAAgCf,oBAAS,GAAzC,mBAAOgB,EAAP,KAAiBC,EAAjB,KAEA,SAASC,EAAUC,GACjBA,EAAMC,iBACNH,GAAY,GAGd,SAASI,IACPJ,GAAY,GAsBd,OAnBAX,qBAAU,WAER,IAAMgB,EAAmBd,OAAOC,aAAY,WAC1CM,EAtBN,WACE,IAAMQ,EAAQtB,KAAKuB,MAAMC,WAAWtB,OAAO,GAE3C,MAAM,SAAN,OAAgBoB,GAmBCG,MACZ,MAKH,OAHAC,SAASC,iBAAiB,cAAeV,GACzCS,SAASC,iBAAiB,QAASP,GAE5B,WACDC,GACFd,OAAOI,cAAcU,GAGvBK,SAASE,oBAAoB,cAAeX,GAC5CS,SAASE,oBAAoB,QAASR,MAEvC,IAGD,qBAAKR,UAAU,MAAf,SACIG,GACA,qCACE,6CACA,cAAClB,EAAD,CAAOC,UAAWA,UC5C5B+B,IAASC,OACP,cAAC,EAAD,IACAJ,SAASK,eAAe,U","file":"static/js/main.d1c597f6.chunk.js","sourcesContent":["/* eslint-disable no-console */\nimport { useState, useEffect } from 'react';\n\ntype ClockProps = {\n  clockName: string;\n};\n\nexport function Clock({ clockName }: ClockProps) {\n  const [time, setTime] = useState(new Date()\n    .toUTCString().slice(-12, -4));\n\n  useEffect(() => {\n    const timerId = window.setInterval(() => {\n      setTime(new Date()\n        .toUTCString().slice(-12, -4));\n      console.info(time);\n    }, 1000);\n\n    return () => {\n      if (timerId) {\n        window.clearInterval(timerId);\n      }\n    };\n  }, []);\n\n  return (\n    <div className=\"Clock\">\n      <strong className=\"Clock__name\">\n        {clockName}\n      </strong>\n\n      {' time is '}\n\n      <span className=\"Clock__time\">\n        {time}\n      </span>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport './App.scss';\nimport { Clock } from './Components/Clock';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\nexport const App: React.FC = () => {\n  const [clockName, setClockName] = useState('Clock-0');\n  const [hasClock, setHasClock] = useState(true);\n\n  function hideClock(event: MouseEvent) {\n    event.preventDefault();\n    setHasClock(false);\n  }\n\n  function showClock() {\n    setHasClock(true);\n  }\n\n  useEffect(() => {\n  // This code starts a timer\n    const clockNameTimerId = window.setInterval(() => {\n      setClockName(getRandomName());\n    }, 3300);\n\n    document.addEventListener('contextmenu', hideClock);\n    document.addEventListener('click', showClock);\n\n    return () => {\n      if (clockNameTimerId) {\n        window.clearInterval(clockNameTimerId);\n      }\n\n      document.removeEventListener('contextmenu', hideClock);\n      document.removeEventListener('click', showClock);\n    };\n  }, []);\n\n  return (\n    <div className=\"App\">\n      { hasClock && (\n        <>\n          <h1>React clock</h1>\n          <Clock clockName={clockName} />\n        </>\n      )}\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}